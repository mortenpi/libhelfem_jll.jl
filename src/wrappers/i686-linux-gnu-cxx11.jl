# Autogenerated wrapper script for libhelfem_jll for i686-linux-gnu-cxx11
export libhelfem

using armadillo_jll
## Global variables
PATH = ""
LIBPATH = ""
LIBPATH_env = "LD_LIBRARY_PATH"
LIBPATH_default = ""

# Relative path to `libhelfem`
const libhelfem_splitpath = ["lib", "libhelfem.a"]

# This will be filled out by __init__() for all products, as it must be done at runtime
libhelfem_path = ""

# libhelfem-specific global declaration
# This will be filled out by __init__()
libhelfem = ""


"""
Open all libraries
"""
function __init__()
    global artifact_dir = abspath(artifact"libhelfem")

    # Initialize PATH and LIBPATH environment variable listings
    global PATH_list, LIBPATH_list
    # From the list of our dependencies, generate a tuple of all the PATH and LIBPATH lists,
    # then append them to our own.
    foreach(p -> append!(PATH_list, p), (armadillo_jll.PATH_list,))
    foreach(p -> append!(LIBPATH_list, p), (armadillo_jll.LIBPATH_list,))

    global libhelfem_path = normpath(joinpath(artifact_dir, libhelfem_splitpath...))

    global libhelfem = libhelfem_path
    # Filter out duplicate and empty entries in our PATH and LIBPATH entries
    filter!(!isempty, unique!(PATH_list))
    filter!(!isempty, unique!(LIBPATH_list))
    global PATH = join(PATH_list, ':')
    global LIBPATH = join(vcat(LIBPATH_list, [joinpath(Sys.BINDIR, Base.LIBDIR, "julia"), joinpath(Sys.BINDIR, Base.LIBDIR)]), ':')
end  # __init__()

